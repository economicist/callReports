% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_ffiec.R
\name{write_ffiec_schedule}
\alias{write_ffiec_schedule}
\title{Write extracted FFIEC schedule data to a database}
\usage{
write_ffiec_schedule(db_connector, sch_code, df_obs, df_codes, df_summ)
}
\arguments{
\item{db_connector}{A \code{function} created by one of the \verb{db_connector_*()}
functions found in this package. It should be passed without the \verb{()}}

\item{df_obs}{A \code{tibble} containing the observations found in the extracted
schedule file, pivoted to long form.
\code{VALUE})}

\item{df_codes}{A \code{tibble} containing the codebook information associated
with the extracted schedule file.}

\item{df_summ}{A \code{tibble} containing information about how many \code{IDRSSD}
values are associated with each \code{VAR_CODE} pair in the schedule}

\item{tbl_name}{The name of the table you're writing, which should be a
valid schedule code.}
}
\description{
\code{write_ffiec_schedule()} writes the observation, codebook, and summary data
generated by \code{extract_ffiec_tsv()} to the database whose connector is
given by \code{db_connector}.
}
\details{
Uses a database "transaction" to write all three tables worth of data in one
go and only save the data if all of it succeeds. Either everything is written
to the database successfully, or nothing is. This prevents duplicate data
being entered into the database in case one reattempts to enter a schedule
after a hypothetical failed attempt that gets interrupted mid-write. Using a
transaction allows us to respond to any failure with an error by "rolling
back" (undoing) any new writes to the database and returning. If successful,
however, we "commit" (finalize) the changes to the database so that they'll
be visible in future queries.
}
