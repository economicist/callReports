% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repair_ffiec.R
\name{repair_ffiec_schedule}
\alias{repair_ffiec_schedule}
\title{Repair a broken FFIEC schedule file}
\usage{
repair_ffiec_schedule(sch_unzipped)
}
\arguments{
\item{sch_unzipped}{The path to a valid FFIEC schedule file on disk}
}
\value{
A character value containing the path to the repaired file, or the
unchanged file if there were no repairs to be made
}
\description{
\code{repair_ffiec_schedule()} takes the path to an unzipped FFIEC schedule file
suspected to contain broken observations, and repairs them if found, returning
either the path to the new file if changed, or the path to the unchanged
file otherwise.
}
\details{
Checks to see if all lines in a tab-separated schedule file have an equal
number of tabs. This needs to be the case for the schedule file to be
read by \code{read_tsv()}. The original data has some variables representing
additional free-response information provided by the bank reporter. The
responses sometimes contain hard returns that are included in the schedule
file as unescaped newlines, which breaks up the observation across multiple
lines and renders it unparsable.

If the lines of the file all contain equal numbers of tabs, then we're
finished attempting to repair. Return the path to the submitted schedule
file.

If the lines of the file do not contain equal numbers of tabs, check to see
if the file can be repaired by joining adjacent lines. If it can be, do so,
write the repaired schedule to disk, and return the path to the repaired
schedule file. Otherwise, return NULL if the file is irreparable.
}
\examples{
repair_ffiec_schedule("FFIEC CDR Call Schedule RIE 06302004.txt")
}
