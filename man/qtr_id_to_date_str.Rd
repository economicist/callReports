% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_metadata.R
\name{qtr_id_to_date_str}
\alias{qtr_id_to_date_str}
\title{Convert a quarter ID back into a date}
\usage{
qtr_id_to_date_str(qtr_int)
}
\arguments{
\item{qtr_int}{An \code{integer} representing the index of a quarter since the
beginning of year 1976}
}
\value{
The \code{Date} of the last day of the requested quarter.
}
\description{
The Chicago Fed and FFIEC source data altogether run quarterly from the
first quarter of 1976 to the present (roughly, the last quarter that ended
roughly at least 6 weeks ago). This function converts either a \code{Date} or a
string containing a date in ISO \code{YYYY-MM-DD} format into a small integer ID
value, where \code{1976-Q1} is represented by \code{1} and incrementing from there.
}
\details{
Pivoting the source data into long form before writing it to the database
has the benefit of giving the database tables a simple and comprehensible
structure, but requires each date to be written thousands or millions of
times due to the sheer number of bank-variable pairs each period.

Creating an integer ID to index the dates allows the date column in each
table to be stored as an integer, which requires significantly less space (2
bytes max) than even the most conservative string format that keeps the date
readable (8 bytes). This significantly reduces the storage requirement of the
extracted data sets, and potentially improves query performance when the
database is kept on slower storage devices such as spinning-platter hard
drives.

The extraction functions found in this library use this function's inverse,
\code{date_str_to_qtr_id()}, to convert the quarter-end reporting dates found in
the source data into integer-valued quarter IDs.
}
