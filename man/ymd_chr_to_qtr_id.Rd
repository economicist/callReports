% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_metadata.R
\name{ymd_chr_to_qtr_id}
\alias{ymd_chr_to_qtr_id}
\title{Convert a reporting date into an integer-valued quarter ID}
\usage{
ymd_chr_to_qtr_id(date_str)
}
\arguments{
\item{date_str}{A \code{Date} or character value in ISO \code{YYYY-MM-DD} format}
}
\value{
The index of the quarter since the beginning of the year 1976, the
initial year of data available from the Chicago Federal Reserve.
}
\description{
The Chicago Fed and FFIEC source data altogether run quarterly from the
first quarter of 1976 to the present (roughly, the last quarter that ended
roughly at least 6 weeks ago). This function converts either a \code{Date} or a
string containing a date in ISO \code{YYYY-MM-DD} format into a small integer ID
value, where \code{1976-Q1} is represented by \code{1} and incrementing from there.
}
\details{
Pivoting the source data into long form before writing it to the database
has the benefit of giving the database tables a simple and comprehensible
structure, but requires each date to be written thousands or millions of
times due to the sheer number of bank-variable pairs each period.

Creating an integer ID to index the dates allows the date column in each
table to be stored as an integer, which requires significantly less space (2
bytes max) than even the most conservative string format that keeps the date
readable (8 bytes). This significantly reduces the storage requirement of the
extracted data sets, and potentially improves query performance when the
database is kept on slower storage devices such as spinning-platter hard
drives.

Query functions found in this library use this function's inverse,
\code{qtr_id_to_ymd_chr()}, which converts quarter IDs back into readable dates
for output to the end user.
}
